# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.


def sum_evens():
    # initialize variables
    total = 0
    # text of problem says to start with 1 and 2 - otherwise sequence starts 0,1,1,2,3,5, etc
    curr = 1
    nxt = 2
    while curr <= 4000000:
        # if a number is divisible by 2 with no remainder it is even
        if curr % 2 == 0:
            total += curr
        # swap - sets curr = nxt and nxt = curr + nxt
        curr, nxt = nxt, curr + nxt
    return total


if __name__ == '__main__':
    print(sum_evens())
